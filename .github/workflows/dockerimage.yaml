name: Build Docker Images

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME_ORCHESTRATOR: orchestrator
  IMAGE_NAME_WORKER: worker

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build Orchestrator Docker image
      run: docker build . --file Orchestrator.Dockerfile --tag $IMAGE_NAME_ORCHESTRATOR:$(date +%s)

    - name: Build Worker Docker image
      run: docker build . --file Worker.Dockerfile --tag $IMAGE_NAME_WORKER:$(date +%s)

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID_ORCHESTRATOR=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_ORCHESTRATOR
        IMAGE_ID_WORKER=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_WORKER

        # Change all uppercase to lowercase
        IMAGE_ID_ORCHESTRATOR=$(echo $IMAGE_NAME_ORCHESTRATOR | tr '[A-Z]' '[a-z]')
        IMAGE_ID_WORKER=$(echo $IMAGE_NAME_WORKER | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME_ORCHESTRATOR $IMAGE_ID_ORCHESTRATOR:$VERSION
        docker push $IMAGE_ID_ORCHESTRATOR:$VERSION

        docker tag $IMAGE_NAME_WORKER $IMAGE_ID_WORKER:$VERSION
        docker push $IMAGE_ID_WORKER:$VERSION